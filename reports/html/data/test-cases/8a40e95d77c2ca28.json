{
  "uid" : "8a40e95d77c2ca28",
  "name" : "test_case_1_get_edu_user_info",
  "fullName" : "testcases.client.test_edu_user_controller.TestEduUserController#test_case_1_get_edu_user_info",
  "historyId" : "c5f329ec81301f17145da5dde96cd498",
  "time" : {
    "start" : 1597881312172,
    "stop" : 1597881312172,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)",
  "statusTrace" : "self = <test_edu_user_controller.TestEduUserController object at 0x10b7a1750>\n\n    @allure.story(\"查询用户信息接口\")\n    def test_case_1_get_edu_user_info(self):\n>       api_info = Basic().get_api_by_name(\"get_user_list\")\n\ntestcases/client/test_edu_user_controller.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/basic_handler.py:75: in get_api_by_name\n    api_info[\"header\"] = self.customize_api_header(header)\ncommon/basic_handler.py:44: in customize_api_header\n    header = json.loads(header)\n../../opt/anaconda3/envs/python37_for_practice/lib/python3.7/json/__init__.py:348: in loads\n    return _default_decoder.decode(s)\n../../opt/anaconda3/envs/python37_for_practice/lib/python3.7/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x10b102310>\ns = '{“Content_Type”: “application/json”}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n\n../../opt/anaconda3/envs/python37_for_practice/lib/python3.7/json/decoder.py:353: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "客户端用户相关接口"
  }, {
    "name" : "story",
    "value" : "查询用户信息接口"
  }, {
    "name" : "parentSuite",
    "value" : "testcases.client"
  }, {
    "name" : "suite",
    "value" : "test_edu_user_controller"
  }, {
    "name" : "subSuite",
    "value" : "TestEduUserController"
  }, {
    "name" : "host",
    "value" : "MBC02W96TZG8WN.lan"
  }, {
    "name" : "thread",
    "value" : "79263-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.client.test_edu_user_controller"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "8a40e95d77c2ca28.json",
  "parameterValues" : [ ]
}